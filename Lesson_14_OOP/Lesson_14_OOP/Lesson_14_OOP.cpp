#include <iostream>
using namespace std;

//Операторы new и delete
//new - позволяет получить от оперативной памяти определённую область в памяти
//delete - позволяет очищать память на которую ссылается указатель
//delete, нужно чтобы подчищать за собой выделенную память, так как она не бесконечна

//Частый удобный пример использования new, примерная задача:
//Пользователь захочет создать массив в ходе работы с программой, но мы не знаем какого он размера,
//поэтому пользователь сам запишет размер массива
//Благодаря этому методу мы не выделяем памяти больше чем на нужно

//Выделить память под объекты классов
//Указатель this - это тот самый объект для которого вызван метод
//Для указателей стрелочка, для обычных переменных точка

//Деструктор - метод для удаления объекта

class object {
private:
	int prop;
public:
	~object()
	{
		cout << "Объект удалён!" << endl;
	}
	void setProp(int prop) {
		//Ссылается на текущий объект, на тот оъект для которого вызвано свойство
		//С помощью оператора стрелочки
		this->prop = prop;
	}

	int getProp() {
		//Возвращает свойство prop текущего объекта
		return this->prop;
	}
};

int main() {
	setlocale(0, "");

	//Указатель
	int* ptr;

	//Выделяем память, int должна вроде быть одинковой с int в указателе
	ptr = new int;

	*ptr = 3;

	cout << *ptr << endl;

	//Можно сделать так за место верхнего

	int* ptr2 = new int(3);

	cout << *ptr2 << endl;

	//Задачка

	int n = 0;
	cout << "Введите размерность массива: ";
	cin >> n;

	//Выделили память на массив, где размерность n
	int* mas = new int[n];

	for (int i = 0; i < n; i++)
	{
		cout << "Введите " << i << " значение: ";
		cin >> mas[i];
	}

	cout << "Вы создали такой массив: ";

	for (int i = 0; i < n; i++)
	{
		cout << mas[i];
	}

	cout << endl;

	//Дальше для this 

	//Указатель на объект
	//В краглых скобках мог бы быть конструтор с параметрами но у нас сейчас их нет
	object* obj = new object();

	//Установливаем свойство
	//this тут ссылается на объект obj
	obj->setProp(7);

	//Для того чтобы обратиться через точку, нужно обращаться не к указателю, а к объекту, и ещё в скобках
	cout << (*obj).getProp() << endl;
	//Можно и так
	cout << obj->getProp() << endl;

	//Очищаем выделенную память
	delete obj;

	system("pause");
	return 0;
}